%{!?python2_sitearch: %define python2_sitearch %(%{__python2} -c "from distutils.sysconfig import get_python_lib; print get_python_lib(1)")}
%define with_ocaml 0
%define build_ocaml 0
%define with_xsm 0
%define build_xsm 0
# Build with docs unless rpmbuild was run with --without docs
%define build_docs %{?_without_docs: 0} %{?!_without_docs: 1}
# Build with stubdom unless rpmbuild was run with --without stubdom
%define build_stubdom %{?_without_stubdom: 0} %{?!_without_stubdom: 1}
# Build with qemu-traditional unless rpmbuild was run with --without qemutrad
%define build_qemutrad %{?_without_qemutrad: 0} %{?!_without_qemutrad: 1}
%if ! %build_qemutrad
%define build_stubdom 0
%endif
# Build with xen hypervisor unless rpmbuild was run with --without hyp
%define build_hyp %{?_without_hyp: 0} %{?!_without_hyp: 1}
# cross compile 64-bit hypervisor on ix86 unless rpmbuild was run
#	with --without crosshyp
%define build_crosshyp %{?_without_crosshyp: 0} %{?!_without_crosshyp: 1}
%ifnarch %{ix86}
%define build_crosshyp 0
%else
%if ! %build_crosshyp
%define build_hyp 0
%endif
%endif
# no point in trying to build xsm on ix86 without a hypervisor
%if ! %build_hyp
%define build_xsm 0
%endif
# build an efi boot image (where supported) unless rpmbuild was run with
# --without efi
%define build_efi %{?_without_efi: 0} %{?!_without_efi: 1}
# xen only supports efi boot images on x86_64 or aarch64
%ifnarch x86_64 aarch64
%define build_efi 0
%endif
%if %build_efi
%ifarch x86_64
%define efiming 1
%else
%define efiming 0
%endif
%else
%define efiming 0
%endif
%if "%dist" >= ".fc20"
%define with_systemd_presets 1
%else
%define with_systemd_presets 0
%endif
%define with_python2 1
%define with_python3 1

# Hypervisor ABI
%define hv_abi  4.11

Summary: Xen is a virtual machine monitor
Name:    xen
Version: @VERSION@
Release: @REL@%{?dist}
Epoch:   2001
Group:   Development/Libraries
License: GPLv2+ and LGPLv2+ and BSD
URL:     http://xen.org/
Source0: xen-%{version}.tar.gz
Source2: %{name}.logrotate
Source3: config
# used by stubdoms
Source10: lwip-1.3.0.tar.gz
Source11: newlib-1.16.0.tar.gz
Source12: zlib-1.2.3.tar.gz
Source13: pciutils-2.2.9.tar.bz2
Source14: grub-0.97.tar.gz
Source15: gmp-4.3.2.tar.bz2
Source16: polarssl-1.1.4-gpl.tgz
Source18: tpm_emulator-0.7.4.tar.gz
Source32: xen.modules-load.conf

# Qubes components for stubdom
Source33: @gui-agent-xen-hvm-stubdom@
Source34: @core-vchan-xen@
Source35: @stubdom-dhcp@
Source36: @gui-common@

# Out-of-tree patches.
#
# Use the following patch numbers:
# 100+:  Fedora
# 200+:  EFI workarounds
# 300+:  Backports
# 400+:  PVH backports
# 500+:  Security fixes
# 600+:  Upstreamable patches
# 700+:  GCC7 fixes
# 800+:  vchan for stubdom:
# 900+:  Qubes specific patches
# 1000+: python3
# 1100+: Support for Linux based stubdom

# Fedora
Patch101: patch-xen.use.fedora.ipxe.patch
Patch102: patch-xen.fedora.efi.build.patch
Patch103: patch-xen.gcc5.fix.patch
Patch104: patch-xen.vwprintw.fix.patch

# EFI workarounds

Patch201: patch-0001-EFI-early-Add-noexit-to-inhibit-calling-ExitBootServices.patch
Patch202: patch-0002-efi-Ensure-incorrectly-typed-runtime-services-get-ma.patch
Patch203: patch-0001-Add-xen.cfg-options-for-mapbs-and-noexitboot.patch

# Security fixes


# Upstreamable patches
Patch601: patch-xen-libxl-error-write-perm.patch
#Patch604: patch-libxl-Revert-libxl-Remove-redundant-setting-of-phyical-dev.patch
#Patch605: patch-libxl-allow-PHY-backend-for-files-allocate-loop-devi.patch
#Patch606: patch-libxl-do-not-call-default-block-script.patch
Patch607: patch-libxl-do-not-for-backend-on-PCI-remove-when-backend-.patch
# TODO: test dynamic network detach
#Patch608: patch-libxl-fix-libxl_device_-_remove-with-driver-domain-s.patch
# TODO: adjust libvirt driver
#Patch609: patch-libxl-suspend.patch
Patch610: patch-stubdom-gmp-compile-fix.patch
Patch611: patch-0001-libxl-attach-xen-pciback-only-to-PV-domains.patch
Patch612: patch-0002-libxl-attach-PCI-device-to-qemu-only-after-setting-p.patch
Patch613: patch-0003-libxl-don-t-try-to-manipulate-json-config-for-stubdo.patch
Patch614: patch-0001-libxl-do-not-fail-device-removal-if-backend-domain-i.patch
Patch615: patch-hvmpt01-minios-exprom-size.patch
Patch616: patch-hvmpt02-disable-msix-caps.patch
Patch617: patch-hvmpt03-passthrough-log.patch
Patch618: patch-hvmpt04-minios-nomask-bar-addrs.patch
Patch619: patch-hvmpt05-hide-pio-bars.patch
Patch620: patch-hvmpt06-fix-msix.patch
Patch621: patch-libxc-fix-xc_gntshr_munmap-semantic.patch
Patch622: patch-minios-ignore-close-0.patch
Patch624: patch-qemu-docs-utf8.patch
Patch625: patch-minios-remove-net-device-instead-of-preparing-for-re.patch
Patch626: patch-xenconsole-sanitize-ESC-in-log.patch
Patch627: patch-qemu-keyboard-leds.patch

# GCC7 fixes
Patch706: patch-mini-os-link-to-libgcc.a-to-fix-build-with-gcc7.patch
# GCC8 fixes
Patch714: patch-tools-kdd-mute-spurious-gcc-warning.patch
Patch715: patch-stubdom-apply-gcc-8-fix-for-tpm-emulator.patch
patch716: patch-gcc8-temporarly-disable-fuzz-SUBDIRS.patch

# vchan for stubdom:
Patch801: patch-0100-minios-enhance-xenstore-available-for-stubdoms.patch
Patch802: patch-0101-libvchan-create-xenstore-entries-in-one-transaction.patch
Patch803: patch-0102-libvchan-remove-unnecessary-includes.patch
Patch804: patch-0103-minios-implement-gntalloc-interface.patch
Patch805: patch-0104-libxc-implement-gntshr-for-minios.patch
Patch806: patch-0105-stubdom-make-libvchan-available-in-stubdom.patch

# Qubes specific patches
Patch901: patch-stubdom-vbd-non-dom0-backend.patch
Patch902: patch-xen-no-downloads.patch
Patch903: patch-xen-hotplug-external-store.patch
Patch904: patch-xen-stubdom-qubes-gui.patch
Patch905: patch-stubdom-lwip-fix-for-dhcp.patch
Patch906: patch-xen-libxl-qubes-minimal-stubdom.patch
Patch907: patch-xen-disable-dom0-qemu.patch
Patch908: patch-libxl-disable-forced-vkb-for-HVM.patch
Patch909: patch-xenconsoled-enable-logging.patch
Patch910: patch-vm-0001-hotplug-do-not-attempt-to-remove-containing-xenstore.patch
Patch911: patch-xen-hotplug-qubesdb-update.patch

# Support for Linux based stubdom
Patch1101: patch-stubdom-linux-0004.patch
Patch1102: patch-stubdom-linux-0005.patch
Patch1103: patch-stubdom-linux-0006.patch
Patch1104: patch-stubdom-linux-libxl-soname.patch
Patch1105: patch-stubdom-linux-pci-add-del.patch
Patch1106: patch-stubdom-linux-config-qubes-gui.patch
Patch1107: patch-stubdom-linux-fix-need-memory.patch
Patch1108: patch-stubdom-linux-config-stubdom-mem.patch
Patch1109: patch-stubdom-linux-libxl-suspend.patch
Patch1110: patch-stubdom-linux-libxl-silence-dm_check_start.patch
Patch1111: patch-stubdom-linux-libxl-do-not-force-qdisk-backend-for-cdrom.patch
Patch1112: patch-stubdom-linux-libxl-don-t-try-to-resolve-local-disk-path-with-stub.patch
Patch1113: patch-stubdom-allow-msi-irq.patch
Patch1114: patch-stubdom-allow-msi-enable.patch
Patch1115: patch-stubdom-linux-cmdline.patch
Patch1116: patch-xenstore-client-raw.patch

%if %build_qemutrad
BuildRequires: libidn-devel zlib-devel SDL-devel curl-devel
BuildRequires: libX11-devel gtk2-devel libaio-devel
# build using Fedora seabios and ipxe packages for roms
BuildRequires: seabios-bin ipxe-roms-qemu
%ifarch %{ix86} x86_64
# for the VMX "bios"
BuildRequires: dev86
%endif
%endif
BuildRequires: ncurses-devel
BuildRequires: perl-interpreter perl-generators
%if %with_python2
BuildRequires: python2-devel
%endif
%if %with_python3
%if 0%{?rhel} >= 7
BuildRequires: python34-devel
%else
BuildRequires: python3-devel
%endif
%endif
BuildRequires: ncurses-devel
%if 0%{?fedora} >= 18
BuildRequires: texlive-times texlive-courier texlive-helvetic texlive-ntgclass
%endif
BuildRequires: ncurses-devel gtk2-devel libaio-devel nettle-devel
# for the docs
BuildRequires: perl perl(Pod::Man) perl(Pod::Text) texinfo graphviz
# so that the makefile knows to install udev rules
BuildRequires: udev
%ifarch %{ix86} x86_64
# so that x86_64 builds pick up glibc32 correctly
BuildRequires: /usr/include/gnu/stubs-32.h
# for the VMX "bios"
BuildRequires: dev86
%endif
BuildRequires: autoconf
BuildRequires: automake
BuildRequires: gettext
BuildRequires: gnutls-devel
BuildRequires: openssl-devel
# For ioemu PCI passthrough
BuildRequires: pciutils-devel
# Several tools now use uuid
BuildRequires: libuuid-devel
# iasl needed to build hvmloader
BuildRequires: acpica-tools
# build using Fedora's ipxe package for roms
BuildRequires: ipxe-roms-qemu
# modern compressed kernels
BuildRequires: bzip2-devel xz-devel
# libfsimage
BuildRequires: e2fsprogs-devel
# tools now require yajl
BuildRequires: yajl-devel
# stubdom build requires cmake
BuildRequires: cmake
# remus support now needs libnl3
BuildRequires: libnl3-devel
%if %with_xsm
# xsm policy file needs needs checkpolicy and m4
BuildRequires: checkpolicy m4
%endif
%if %build_crosshyp
# cross compiler for building 64-bit hypervisor on ix86
BuildRequires: gcc-x86_64-linux-gnu
%endif
# gcc with BTI mitigation, for dom0 build
%if 0%{?fedora} == 25
#BuildRequires: gcc >= 6.4.1-1.qubes1
BuildRequires: gcc
%endif
BuildRequires: bison
BuildRequires: flex
Requires: bridge-utils
Requires: python2-lxml
Requires: udev >= 059
Requires: xen-runtime = %{version}-%{release}
# Not strictly a dependency, but kpartx is by far the most useful tool right
# now for accessing domU data from within a dom0 so bring it in when the user
# installs xen.
Requires: kpartx
Requires: chkconfig
ExclusiveArch: %{ix86} x86_64 armv7hl aarch64
#ExclusiveArch: %#{ix86} x86_64 ia64 noarch
%if %with_ocaml
BuildRequires: ocaml, ocaml-findlib
%endif
# efi image needs an ld that has -mi386pep option
%if %efiming
BuildRequires: mingw64-binutils
%endif
%if %with_systemd_presets
Requires(post): systemd
Requires(preun): systemd
Requires(postun): systemd
BuildRequires: systemd
%endif
BuildRequires: systemd-devel
%ifarch armv7hl aarch64
BuildRequires: libfdt-devel
%endif
# BIOS for HVMs
%if 0%{?rhel} >= 7
BuildRequires: OVMF
%else
BuildRequires: edk2-ovmf
%endif

%description
This package contains the XenD daemon and xm command line
tools, needed to manage virtual machines running under the
Xen hypervisor

%if %with_python2
%package -n python2-%{name}
Summary: Python2 bindings for Xen tools
Group: Development/Libraries
Requires: xen-libs = %{version}-%{release}
Requires: python2
%{?python_provide:%python_provide python2-%{name}}

%description -n python2-%{name}
This package contains Python2 bindings to Xen tools. Especially xen.lowlevel.xs
and xen.lowlevel.xc modules.

%endif

%if %with_python3
%if 0%{?rhel} >= 7
%package -n python34-%{name}
Summary: Python3 bindings for Xen tools
Group: Development/Libraries
Requires: xen-libs = %{version}-%{release}
Requires: python34
%{?python_provide:%python_provide python34-%{name}}

%description -n python34-%{name}
This package contains Python3 bindings to Xen tools. Especially xen.lowlevel.xs
and xen.lowlevel.xc modules.
%else
%package -n python3-%{name}
Summary: Python3 bindings for Xen tools
Group: Development/Libraries
Requires: xen-libs = %{version}-%{release}
Requires: python3
%{?python_provide:%python_provide python3-%{name}}

%description -n python3-%{name}
This package contains Python3 bindings to Xen tools. Especially xen.lowlevel.xs
and xen.lowlevel.xc modules.
%endif

%endif

%package libs
Summary: Libraries for Xen tools
Group: Development/Libraries
Requires(pre): /sbin/ldconfig
Requires(post): /sbin/ldconfig
Requires: xen-licenses
Provides: xen-libs = %{version}-%{release}
Obsoletes: xen-qubes-vm-libs < %{epoch}:%{version}-%{release}
# qemu parameters format changed
Conflicts: xen-hvm-stubdom-linux < 1.0.4
# pvh definition syntax change
Conflicts: libvirt-daemon-driver-libxl < 3.3.0-7

%description libs
This package contains the libraries needed to run applications
which manage Xen virtual machines.


%package runtime
Summary: Core Xen runtime environment
Group: Development/Libraries
Requires: xen-libs = %{version}-%{release}
# Ensure we at least have a suitable kernel installed, though we can't
# force user to actually boot it.
Requires: xen-hypervisor-abi = %{hv_abi}
Requires: perl
Provides: xen-runtime = %{version}-%{release}
Provides: xen-hvm = %{epoch}:%{version}-%{release}
Obsoletes: xen-hvm < %{epoch}:4.11-1

%description runtime
This package contains the runtime programs and daemons which
form the core Xen userspace environment.


%package hypervisor
Summary: Libraries for Xen tools
Group: Development/Libraries
Provides: xen-hypervisor-abi = %{hv_abi}
Requires: xen-licenses

%description hypervisor
This package contains the Xen hypervisor


%if %build_docs
%package doc
Summary: Xen documentation
Group: Documentation
BuildArch: noarch
Requires: xen-licenses
# for the docs
%if "%dist" >= ".fc18"
BuildRequires: texlive-times texlive-courier texlive-helvetic texlive-ntgclass
%endif
BuildRequires: transfig texi2html ghostscript texlive-latex
BuildRequires: perl(Pod::Man) perl(Pod::Text) texinfo graphviz
# optional requires for more documentation
#BuildRequires: pandoc discount
BuildRequires: discount

%description doc
This package contains the Xen documentation.
%endif


%package devel
Summary: Development libraries for Xen tools
Group: Development/Libraries
Requires: xen-libs = %{version}-%{release}
Requires: libuuid-devel
Provides: xen-devel = %{version}-%{release}
Obsoletes: xen-qubes-vm-devel

%description devel
This package contains what's needed to develop applications
which manage Xen virtual machines.


%package licenses
Summary: License files from Xen source
Group: Documentation

%description licenses
This package contains the license files from the source used
to build the xen packages.


%if %build_ocaml
%package ocaml
Summary: Ocaml libraries for Xen tools
Group: Development/Libraries
Requires: ocaml-runtime, xen-libs = %{version}-%{release}

%description ocaml
This package contains libraries for ocaml tools to manage Xen
virtual machines.


%package ocaml-devel
Summary: Ocaml development libraries for Xen tools
Group: Development/Libraries
Requires: xen-ocaml = %{version}-%{release}

%description ocaml-devel
This package contains libraries for developing ocaml tools to
manage Xen virtual machines.
%endif

%package qemu-tools
Summary: Qemu disk tools bundled with Xen
Provides: qemu-img
Conflicts: qemu-img

%description qemu-tools
This package contains symlinks to qemu tools (qemu-img, qemu-nbd, qemu-io)
budled with Xen, making them available for general use.

%package qubes-vm
Summary: Xen files required in Qubes VM
Requires: xen-libs = %{epoch}:%{version}-%{release}
Requires: perl
Conflicts: xen
Provides: xen-qubes-vm-essentials = %{epoch}:%{version}-%{release}

%description qubes-vm
Just a few xenstore-* tools and Xen hotplug scripts needed by Qubes VMs

%prep
%autosetup -p1

# Fix for glibc 2.7
#FIXME sed 's:LIBS+=-lutil:LIBS+=-lutil -lrt:' -i tools/ioemu-qemu-xen/Makefile.target

# stubdom sources
cp -v %{SOURCE10} %{SOURCE11} %{SOURCE12} %{SOURCE13} %{SOURCE14} stubdom
cp -v %{SOURCE15} %{SOURCE16} %{SOURCE18} stubdom

# qubes specific parts of stubdom
tar xf %{SOURCE33}
mkdir tools/qubes-gui/
cp -a gui-agent-xen-hvm-stubdom/* tools/qubes-gui/

tar xf %{SOURCE36}
cp -a gui-common/include/qubes-gui*.h tools/qubes-gui/include/
make -C tools/qubes-gui clean

tar xf %{SOURCE34}
cp -a core-vchan-xen/vchan tools/
make -C tools/vchan -f Makefile.stubdom clean
sed -e 's/ioemu-qemu-xen/qemu-xen-traditional/g' tools/qubes-gui/gui-agent-qemu/qemu-glue.patch | patch -p1

tar xf %{SOURCE35}
cp -a stubdom-dhcp/* tools/qemu-xen-traditional/
patch -d tools/qemu-xen-traditional -p4 < stubdom-dhcp/lwip-dhcp-qemu-glue.patch


%build
%if !%build_ocaml
%define ocaml_flags OCAML_TOOLS=n
%endif
%if %efiming
%define efi_flags LD_EFI=/usr/x86_64-w64-mingw32/bin/ld EFI_VENDOR=qubes
%endif
%if %build_efi
mkdir -p dist/install/boot/efi/efi/qubes
%endif
%if %build_ocaml
mkdir -p dist/install%{_libdir}/ocaml/stublibs
%endif
%if %(test -f /usr/share/seabios/bios-256k.bin && echo 1|| echo 0)
%define seabiosloc /usr/share/seabios/bios-256k.bin
%else
%define seabiosloc /usr/share/seabios/bios.bin
%endif
export XEN_VENDORVERSION="-%{release}"
export EXTRA_CFLAGS_XEN_TOOLS="$RPM_OPT_FLAGS"
export EXTRA_CFLAGS_QEMU_TRADITIONAL="$RPM_OPT_FLAGS"
export EXTRA_CFLAGS_QEMU_XEN="$RPM_OPT_FLAGS"
export KCONFIG_CONFIG=%{SOURCE3}
cp -f %{SOURCE3} xen/.config
export XEN_CONFIG_EXPERT=y
%if %build_hyp
%if %build_crosshyp
%define efi_flags LD_EFI=false
XEN_TARGET_ARCH=x86_64 make %{?_smp_mflags} %{?efi_flags} prefix=/usr xen CC="/usr/bin/x86_64-linux-gnu-gcc `echo $RPM_OPT_FLAGS | sed -e 's/-m32//g' -e 's/-march=i686//g' -e 's/-mtune=atom//g' -e 's/-specs=\/usr\/lib\/rpm\/redhat\/redhat-annobin-cc1//g' -e 's/-fstack-clash-protection//g' -e 's/-mcet//g' -e 's/-fcf-protection//g'`"
%else
%ifarch armv7hl
make %{?_smp_mflags} %{?efi_flags} prefix=/usr xen CC="gcc `echo $RPM_OPT_FLAGS | sed -e 's/-mfloat-abi=hard//g' -e 's/-march=armv7-a//g'`"
%else
%ifarch aarch64
make %{?_smp_mflags} %{?efi_flags} prefix=/usr xen CC="gcc $RPM_OPT_FLAGS"
%else
make %{?_smp_mflags} %{?efi_flags} prefix=/usr xen CC="gcc `echo $RPM_OPT_FLAGS | sed -e 's/-specs=\/usr\/lib\/rpm\/redhat\/redhat-annobin-cc1//g' -e 's/-fcf-protection//g'`"
%endif
%endif
%endif
%endif
%if ! %build_qemutrad
CONFIG_EXTRA="--disable-qemu-traditional"
%else
CONFIG_EXTRA=""
%endif
export PATH="/usr/bin:$PATH"
autoreconf
# setting libexecdir to real libexec is broken in the configure script (it is
# overrided by /usr/lib)
./configure \
    --prefix=%{_prefix} \
    --libdir=%{_libdir} \
    --libexecdir=/usr/lib \
    --with-system-seabios=%{seabiosloc} \
    --with-system-ovmf=/usr/lib/xen/boot/ovmf.bin \
    --enable-vtpm-stubdom \
    --enable-vtpmmgr-stubdom \
    --with-extra-qemuu-configure-args="--disable-spice" \
    $CONFIG_EXTRA
make %{?_smp_mflags} %{?ocaml_flags} prefix=/usr tools
%if %build_docs
make                 prefix=/usr docs
%endif
export RPM_OPT_FLAGS_RED=`echo $RPM_OPT_FLAGS | sed -e 's/-m64//g' -e 's/--param=ssp-buffer-size=4//g' -e's/-fstack-protector-strong//'`
%ifarch %{ix86}
export EXTRA_CFLAGS_XEN_TOOLS="$RPM_OPT_FLAGS_RED"
%endif
%if %build_stubdom
%ifnarch armv7hl aarch64
make mini-os-dir
make -C stubdom build
%endif
%ifarch x86_64
export EXTRA_CFLAGS_XEN_TOOLS="$RPM_OPT_FLAGS_RED"
XEN_TARGET_ARCH=x86_32 make -C stubdom pv-grub
%endif
%endif

%if %with_python2
make PYTHON=%{__python2} -C tools/python
%endif
%if %with_python3
make PYTHON=%{__python3} -C tools/python
%endif

%install
rm -rf %{buildroot}
mkdir -p %{buildroot}
cp -prlP dist/install/* %{buildroot}
%if %build_stubdom
%ifnarch armv7hl aarch64
make DESTDIR=%{buildroot} %{?ocaml_flags} prefix=/usr install-stubdom
%endif
%endif
%if %build_efi
mkdir -p %{buildroot}/boot/efi/efi/qubes
%endif
%if %build_efi
mv %{buildroot}/boot/efi/efi %{buildroot}/boot/efi/EFI
%endif
%if %build_xsm
# policy file should be in /boot/flask
mkdir %{buildroot}/boot/flask
mv %{buildroot}/boot/xenpolicy* %{buildroot}/boot/flask
%else
rm -f %{buildroot}/boot/xenpolicy*
rm -f %{buildroot}/usr/sbin/flask-*
%endif

%if %with_python3
make PYTHON=%{__python3} -C tools/python DESTDIR=%{buildroot} install
%endif

# qemu symlinks
mkdir -p %{buildroot}/usr/bin
ln -s ../lib/%{name}/bin/qemu-img %{buildroot}/usr/bin/
ln -s ../lib/%{name}/bin/qemu-io  %{buildroot}/usr/bin/
ln -s ../lib/%{name}/bin/qemu-nbd %{buildroot}/usr/bin/

# "build" combined OVMF image based on system package
%if 0%{?rhel} >=7
cat /usr/share/OVMF/OVMF_{VARS,CODE.secboot}.fd > %{buildroot}/usr/lib/xen/boot/ovmf.bin
%else
cat /usr/share/edk2/ovmf/OVMF_{VARS,CODE}.fd > %{buildroot}/usr/lib/xen/boot/ovmf.bin
%endif

############ debug packaging: list files ############

find %{buildroot} -print | xargs ls -ld | sed -e 's|.*%{buildroot}||' > f1.list

############ kill unwanted stuff ############

# stubdom: newlib
rm -rf %{buildroot}/usr/*-xen-elf

# hypervisor symlinks
rm -rf %{buildroot}/boot/xen-4.10.gz
rm -rf %{buildroot}/boot/xen-4.gz
rm -rf %{buildroot}/boot/xen.gz
%if !%build_hyp
rm -rf %{buildroot}/boot
%endif

# silly doc dir fun
rm -rf %{buildroot}%{_datadir}/doc/xen
rm -rf %{buildroot}%{_datadir}/doc/qemu

# Pointless helper
rm -f %{buildroot}%{_sbindir}/xen-python-path

# qemu stuff (unused or available from upstream)
rm -rf %{buildroot}/usr/share/xen/man
for file in bios.bin openbios-sparc32 openbios-sparc64 ppc_rom.bin \
         pxe-e1000.bin pxe-ne2k_pci.bin pxe-pcnet.bin pxe-rtl8139.bin \
         vgabios.bin vgabios-cirrus.bin video.x openbios-ppc bamboo.dtb
do
	rm -f %{buildroot}/%{_datadir}/xen/qemu/$file
done
rm -f %{buildroot}/usr/libexec/qemu-bridge-helper

# README's not intended for end users
rm -f %{buildroot}/%{_sysconfdir}/xen/README*

# standard gnu info files
rm -rf %{buildroot}/usr/info

# adhere to Static Library Packaging Guidelines
rm -rf %{buildroot}/%{_libdir}/*.a

%if %build_efi
# clean up extra efi files
rm -rf %{buildroot}/%{_libdir}/efi
%endif

%if ! %build_ocaml
rm -rf %{buildroot}/%{_unitdir}/oxenstored.service
%endif

############ fixup files in /etc ############

# logrotate
mkdir -p %{buildroot}%{_sysconfdir}/logrotate.d/
install -m 644 %{SOURCE2} %{buildroot}%{_sysconfdir}/logrotate.d/%{name}

# init scripts
rm %{buildroot}%{_sysconfdir}/rc.d/init.d/xen-watchdog
rm %{buildroot}%{_sysconfdir}/rc.d/init.d/xencommons
rm %{buildroot}%{_sysconfdir}/rc.d/init.d/xendomains
rm %{buildroot}%{_sysconfdir}/rc.d/init.d/xendriverdomain
rm %{buildroot}%{_sysconfdir}/sysconfig/xendomains

cp %{SOURCE32} %{buildroot}/usr/lib/modules-load.d/xen.conf

# Qubes specific - get rid of standard domain starting scripts
rm %{buildroot}%{_unitdir}/xen-qemu-dom0-disk-backend.service
rm %{buildroot}%{_unitdir}/xendomains.service

############ create dirs in /var ############

mkdir -p %{buildroot}%{_localstatedir}/lib/xen/images
mkdir -p %{buildroot}%{_localstatedir}/log/xen/console

ln -s ../sbin/xl %{buildroot}/%{_bindir}/xl

############ debug packaging: list files ############

find %{buildroot} -print | xargs ls -ld | sed -e 's|.*%{buildroot}||' > f2.list
diff -u f1.list f2.list || true

############ assemble license files ############

mkdir licensedir
# avoid licensedir to avoid recursion, also stubdom/ioemu and dist
# which are copies of files elsewhere
find . -path licensedir -prune -o -path stubdom/ioemu -prune -o \
  -path dist -prune -o -name COPYING -o -name LICENSE | while read file; do
  mkdir -p licensedir/`dirname $file`
  install -m 644 $file licensedir/$file
done

############ all done now ############

%postun
%systemd_postun

%post runtime
%systemd_post xenstored.service xenconsoled.service

%preun runtime
%systemd_preun xenstored.service xenconsoled.service

%postun runtime
%systemd_postun

%post qubes-vm
# Unconditionally enable this service in Qubes VM
systemctl enable xendriverdomain.service >/dev/null 2>&1 || :

%preun qubes-vm
%systemd_preun xendriverdomain.service

%postun qubes-vm
%systemd_postun

%post libs

/sbin/ldconfig

# reload libxl library
systemctl try-restart libvirtd.service >/dev/null 2>&1 || :

%postun libs -p /sbin/ldconfig

%if %build_hyp
%post hypervisor
%if %build_efi
EFI_DIR=$(efibootmgr -v 2>/dev/null | awk '
      /^BootCurrent:/ { current=$2; }
      /^Boot....\* / {
          if ("Boot" current "*" == $1) {
              sub(".*File\\(", "");
              sub("\\\\xen.efi\\).*", "");
              gsub("\\\\", "/");
              print;
          }
      }')
# FAT (on ESP) does not support symlinks
# override the file on purpose
if [ -d "/boot/efi${EFI_DIR}" ]; then
  cp -pf /boot/efi/EFI/qubes/xen-%{version}.efi /boot/efi${EFI_DIR}/xen.efi
else
  cp -pf /boot/efi/EFI/qubes/xen-%{version}.efi /boot/efi/EFI/qubes/xen.efi
fi
%endif
if [ $1 == 1 -a -f /sbin/grub2-mkconfig ]; then
  if [ -f /boot/grub2/grub.cfg ]; then
    /sbin/grub2-mkconfig -o /boot/grub2/grub.cfg
  fi
  if [ -f /boot/efi/EFI/qubes/grub.cfg ]; then
    /sbin/grub2-mkconfig -o /boot/efi/EFI/qubes/grub.cfg
  fi
fi

%postun hypervisor
if [ -f /sbin/grub2-mkconfig ]; then
  if [ -f /boot/grub2/grub.cfg ]; then
    /sbin/grub2-mkconfig -o /boot/grub2/grub.cfg
  fi
  if [ -f /boot/efi/EFI/qubes/grub.cfg ]; then
    /sbin/grub2-mkconfig -o /boot/efi/EFI/qubes/grub.cfg
  fi
fi
%endif

%if %build_ocaml
%post ocaml
%systemd_post oxenstored.service

%preun ocaml
%systemd_preun oxenstored.service

%postun ocaml
%systemd_postun
%endif

%clean
rm -rf %{buildroot}

# Base package only contains XenD/xm python stuff
#files -f xen-xm.lang
%files
%defattr(-,root,root)
%doc COPYING README
%{_bindir}/xencons

%files -n python2-%{name}
%{python2_sitearch}/%{name}
%{python2_sitearch}/xen-*.egg-info

%if 0%{?rhel} >= 7
%files -n python34-%{name}
%else
%files -n python3-%{name}
%endif
%{python3_sitearch}/%{name}
%{python3_sitearch}/xen-*.egg-info

%files libs
%defattr(-,root,root)
%{_libdir}/*.so.*
%{_libdir}/fs

# All runtime stuff except for XenD/xm python stuff
%files runtime
%defattr(-,root,root)
# Hotplug rules

%dir %attr(0700,root,root) %{_sysconfdir}/%{name}
%dir %attr(0700,root,root) %{_sysconfdir}/%{name}/scripts/
%config %attr(0700,root,root) %{_sysconfdir}/%{name}/scripts/*

%{_sysconfdir}/bash_completion.d/xl.sh
%exclude %{_unitdir}/xendriverdomain.service

%{_unitdir}/proc-xen.mount
%{_unitdir}/var-lib-xenstored.mount
%{_unitdir}/xen-init-dom0.service
%{_unitdir}/xenstored.service
%{_unitdir}/xenconsoled.service
%{_unitdir}/xen-watchdog.service
/usr/lib/modules-load.d/xen.conf

%config(noreplace) %{_sysconfdir}/sysconfig/xencommons
%config(noreplace) %{_sysconfdir}/xen/xl.conf
%config(noreplace) %{_sysconfdir}/xen/cpupool
%config(noreplace) %{_sysconfdir}/xen/xlexample*

# Rotate console log files
%config(noreplace) %{_sysconfdir}/logrotate.d/xen

# Programs run by other programs
%dir /usr/lib/%{name}
%dir /usr/lib/%{name}/bin
%attr(0700,root,root) /usr/lib/%{name}/bin/*
# QEMU runtime files
%if %build_qemutrad
%ifnarch armv7hl aarch64
%dir %{_datadir}/%{name}/qemu
%dir %{_datadir}/%{name}/qemu/keymaps
%{_datadir}/%{name}/qemu/keymaps/*
%dir %{_datadir}/qemu-xen
%dir %{_datadir}/qemu-xen/qemu
%{_datadir}/qemu-xen/qemu/*
%endif
%endif

# man pages
%if %build_docs
%{_mandir}/man1/xentop.1*
%{_mandir}/man1/xentrace_format.1*
%{_mandir}/man8/xentrace.8*
%{_mandir}/man1/xl.1*
%{_mandir}/man5/xl.cfg.5*
%{_mandir}/man5/xl.conf.5*
%{_mandir}/man5/xlcpupool.cfg.5*
%{_mandir}/man1/xenstore*
%{_mandir}/man5/xl-disk-configuration.5.gz
%{_mandir}/man7/xen-pci-device-reservations.7.gz
%{_mandir}/man7/xen-tscmode.7.gz
%{_mandir}/man7/xen-vtpm.7.gz
%{_mandir}/man7/xen-vtpmmgr.7.gz
%{_mandir}/man5/xl-network-configuration.5.gz
%{_mandir}/man7/xen-pv-channel.7.gz
%{_mandir}/man7/xl-numa-placement.7.gz
%endif

%{python2_sitearch}/fsimage.so
%{python2_sitearch}/grub
%{python2_sitearch}/pygrub-*.egg-info

# The firmware
%ifarch %{ix86} x86_64
%dir /usr/lib/%{name}/boot
/usr/lib/xen/boot/hvmloader
%ifnarch %{ix86}
/usr/lib/xen/boot/xen-shim
/usr/lib/debug/usr/lib/xen/boot/xen-shim-syms
%endif
%if %build_stubdom
/usr/lib/xen/boot/ioemu-stubdom.gz
/usr/lib/xen/boot/xenstore-stubdom.gz
/usr/lib/xen/boot/pv-grub*.gz
/usr/lib/xen/boot/vtpm-stubdom.gz
/usr/lib/xen/boot/vtpmmgr-stubdom.gz
%endif
/usr/lib/xen/boot/ovmf.bin
%endif
# General Xen state
%dir %{_localstatedir}/lib/%{name}
%dir %{_localstatedir}/lib/%{name}/dump
%dir %{_localstatedir}/lib/%{name}/images
# Xenstore persistent state
%dir %{_localstatedir}/lib/xenstored
# Xenstore runtime state
%ghost %{_localstatedir}/run/xenstored

# All xenstore CLI tools
%{_bindir}/qemu-*-xen
%{_bindir}/xenstore
%{_bindir}/xenstore-*
%{_bindir}/pygrub
%{_bindir}/xentrace*
/usr/lib/%{name}/bin/init-xenstore-domain
#%%{_bindir}/remus
# XSM
%if %build_xsm
%{_sbindir}/flask-*
%endif
# Misc stuff
%ifnarch armv7hl aarch64
%{_bindir}/xen-detect
%endif
%{_bindir}/xencov_split
%ifnarch armv7hl aarch64
%{_sbindir}/gdbsx
%{_sbindir}/kdd
%endif
%{_sbindir}/xen-bugtool
%ifnarch armv7hl aarch64
%{_sbindir}/xen-hptool
%{_sbindir}/xen-hvmcrash
%{_sbindir}/xen-hvmctx
%endif
%{_sbindir}/xen-tmem-list-parse
%{_sbindir}/xenconsoled
%{_sbindir}/xenlockprof
%{_sbindir}/xenmon.py*
%{_sbindir}/xentop
%{_sbindir}/xentrace_setmask
%{_sbindir}/xenbaked
%{_sbindir}/xenstored
%{_sbindir}/xenpm
%{_sbindir}/xenpmd
%{_sbindir}/xenperf
%{_sbindir}/xenwatchdogd
%{_sbindir}/xl
%ifnarch armv7hl aarch64
%{_sbindir}/xen-lowmemd
%endif
%{_sbindir}/xen-ringwatch
%{_sbindir}/xencov
%ifnarch armv7hl aarch64
%{_sbindir}/xen-mfndump
%endif
/usr/share/pkgconfig/*
%ifnarch armv7hl aarch64
%{_bindir}/xenalyze
%endif
%{_sbindir}/xentrace
%{_sbindir}/xentrace_setsize
%ifnarch armv7hl aarch64
%{_bindir}/xen-cpuid
%endif
%{_sbindir}/xen-livepatch
%{_sbindir}/xen-diag
%{_bindir}/xl

# Xen logfiles
%dir %attr(0700,root,root) %{_localstatedir}/log/xen
# Guest/HV console logs
%dir %attr(0700,root,root) %{_localstatedir}/log/xen/console

%files hypervisor
%if %build_hyp
%defattr(-,root,root)
%ifnarch armv7hl aarch64
/boot/xen-*.gz
%config(noreplace) /boot/xen-*.config
%else
/boot/xen*
%endif
%if %build_xsm
%dir %attr(0755,root,root) /boot/flask
/boot/flask/xenpolicy*
%endif
%if %build_efi
/boot/efi/EFI/qubes/*.efi
%endif
/usr/lib/debug/xen*
%endif

%if %build_docs
%files doc
%defattr(-,root,root)
%doc docs/misc/
%doc dist/install/usr/share/doc/xen/html
%endif

%files devel
%defattr(-,root,root)
%{_includedir}/*.h
%dir %{_includedir}/xen
%{_includedir}/xen/*
%dir %{_includedir}/xenstore-compat
%{_includedir}/xenstore-compat/*
%{_libdir}/*.so

%files licenses
%defattr(-,root,root)
%doc licensedir/*

%if %build_ocaml
%files ocaml
%defattr(-,root,root)
%{_libdir}/ocaml/xen*
%exclude %{_libdir}/ocaml/xen*/*.a
%exclude %{_libdir}/ocaml/xen*/*.cmxa
%exclude %{_libdir}/ocaml/xen*/*.cmx
%{_libdir}/ocaml/stublibs/*.so
%{_libdir}/ocaml/stublibs/*.so.owner
%{_sbindir}/oxenstored
%config(noreplace) %{_sysconfdir}/xen/oxenstored.conf
%{_unitdir}/oxenstored.service

%files ocaml-devel
%defattr(-,root,root)
%{_libdir}/ocaml/xen*/*.a
%{_libdir}/ocaml/xen*/*.cmxa
%{_libdir}/ocaml/xen*/*.cmx
%endif

%files qemu-tools
/usr/bin/qemu-img
/usr/bin/qemu-io
/usr/bin/qemu-nbd
/usr/share/locale/*/LC_MESSAGES/qemu.mo

%files qubes-vm
%{_bindir}/xenstore
%{_bindir}/xenstore-*
%{_sbindir}/xl
%{_unitdir}/xendriverdomain.service
%config(noreplace) %{_sysconfdir}/xen/xl.conf

%dir %attr(0700,root,root) %{_sysconfdir}/xen
%dir %attr(0700,root,root) %{_sysconfdir}/xen/scripts/
%config %attr(0700,root,root) %{_sysconfdir}/xen/scripts/*

# General Xen state
%dir %{_localstatedir}/lib/xen
%dir %{_localstatedir}/lib/xen/dump

# Xen logfiles
%dir %attr(0700,root,root) %{_localstatedir}/log/xen

# Python modules
%dir %{python2_sitearch}/xen
%{python2_sitearch}/xen/__init__.*
%{python2_sitearch}/xen/lowlevel
%{python2_sitearch}/xen-*.egg-info


%changelog
@CHANGELOG@
